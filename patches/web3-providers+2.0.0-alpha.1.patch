diff --git a/node_modules/web3-providers/dist/web3-providers.cjs.js b/node_modules/web3-providers/dist/web3-providers.cjs.js
index 40b432f..699d9dc 100644
--- a/node_modules/web3-providers/dist/web3-providers.cjs.js
+++ b/node_modules/web3-providers/dist/web3-providers.cjs.js
@@ -473,8 +473,8 @@ function (_AbstractSocketProvid) {
     key: "onError",
     value: function onError(event) {
       if (event.code === 'ECONNREFUSED') {
-        this.reconnect();
-        return;
+        //this.reconnect();
+        //return;
       }
       _get(_getPrototypeOf(WebsocketProvider.prototype), "onError", this).call(this, event);
     }
@@ -482,8 +482,8 @@ function (_AbstractSocketProvid) {
     key: "onClose",
     value: function onClose(closeEvent) {
       if (closeEvent.code !== 1000 || closeEvent.wasClean === false) {
-        this.reconnect();
-        return;
+        //this.reconnect();
+        //return;
       }
       _get(_getPrototypeOf(WebsocketProvider.prototype), "onClose", this).call(this);
     }
diff --git a/node_modules/web3-providers/dist/web3-providers.esm.js b/node_modules/web3-providers/dist/web3-providers.esm.js
index 787f738..056ecea 100644
--- a/node_modules/web3-providers/dist/web3-providers.esm.js
+++ b/node_modules/web3-providers/dist/web3-providers.esm.js
@@ -269,15 +269,15 @@ class WebsocketProvider extends AbstractSocketProvider {
   }
   onError(event) {
     if (event.code === 'ECONNREFUSED') {
-      this.reconnect();
-      return;
+      //this.reconnect();
+      //return;
     }
     super.onError(event);
   }
   onClose(closeEvent) {
     if (closeEvent.code !== 1000 || closeEvent.wasClean === false) {
-      this.reconnect();
-      return;
+      //this.reconnect();
+      //return;
     }
     super.onClose();
   }
diff --git a/node_modules/web3-providers/dist/web3-providers.umd.js b/node_modules/web3-providers/dist/web3-providers.umd.js
index 1b2edf5..b7220e0 100644
--- a/node_modules/web3-providers/dist/web3-providers.umd.js
+++ b/node_modules/web3-providers/dist/web3-providers.umd.js
@@ -471,8 +471,8 @@
         key: "onError",
         value: function onError(event) {
           if (event.code === 'ECONNREFUSED') {
-            this.reconnect();
-            return;
+            //this.reconnect();
+            //return;
           }
           _get(_getPrototypeOf(WebsocketProvider.prototype), "onError", this).call(this, event);
         }
@@ -480,8 +480,8 @@
         key: "onClose",
         value: function onClose(closeEvent) {
           if (closeEvent.code !== 1000 || closeEvent.wasClean === false) {
-            this.reconnect();
-            return;
+            //this.reconnect();
+            //return;
           }
           _get(_getPrototypeOf(WebsocketProvider.prototype), "onClose", this).call(this);
         }
