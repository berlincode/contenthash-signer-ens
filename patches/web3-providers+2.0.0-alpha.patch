diff --git a/node_modules/web3-providers/dist/web3-providers.cjs.js b/node_modules/web3-providers/dist/web3-providers.cjs.js
index 70d6cd3..bcc25dd 100644
--- a/node_modules/web3-providers/dist/web3-providers.cjs.js
+++ b/node_modules/web3-providers/dist/web3-providers.cjs.js
@@ -411,7 +411,8 @@ function (_AbstractSocketProvid) {
     key: "onError",
     value: function onError(event) {
       if (event.code === 'ECONNREFUSED') {
-        this.reconnect();
+//        this.reconnect();
+        _get(_getPrototypeOf(WebsocketProvider.prototype), "onClose", this).call(this, event);
         return;
       }
       _get(_getPrototypeOf(WebsocketProvider.prototype), "onError", this).call(this, event);
@@ -420,8 +421,8 @@ function (_AbstractSocketProvid) {
     key: "onClose",
     value: function onClose(closeEvent) {
       if (closeEvent.code !== 1000 || closeEvent.wasClean === false) {
-        this.reconnect();
-        return;
+//        this.reconnect();
+//        return;
       }
       _get(_getPrototypeOf(WebsocketProvider.prototype), "onClose", this).call(this);
     }
diff --git a/node_modules/web3-providers/dist/web3-providers.esm.js b/node_modules/web3-providers/dist/web3-providers.esm.js
index e3336bb..6305aa8 100644
--- a/node_modules/web3-providers/dist/web3-providers.esm.js
+++ b/node_modules/web3-providers/dist/web3-providers.esm.js
@@ -253,15 +253,16 @@ class WebsocketProvider extends AbstractSocketProvider {
   }
   onError(event) {
     if (event.code === 'ECONNREFUSED') {
-      this.reconnect();
+//      this.reconnect();
+      super.onClose();
       return;
     }
     super.onError(event);
   }
   onClose(closeEvent) {
     if (closeEvent.code !== 1000 || closeEvent.wasClean === false) {
-      this.reconnect();
-      return;
+//      this.reconnect();
+//      return;
     }
     super.onClose();
   }
diff --git a/node_modules/web3-providers/dist/web3-providers.umd.js b/node_modules/web3-providers/dist/web3-providers.umd.js
index 4815147..fbf7fe4 100644
--- a/node_modules/web3-providers/dist/web3-providers.umd.js
+++ b/node_modules/web3-providers/dist/web3-providers.umd.js
@@ -409,7 +409,8 @@
         key: "onError",
         value: function onError(event) {
           if (event.code === 'ECONNREFUSED') {
-            this.reconnect();
+//            this.reconnect();
+            _get(_getPrototypeOf(WebsocketProvider.prototype), "onClose", this).call(this);
             return;
           }
           _get(_getPrototypeOf(WebsocketProvider.prototype), "onError", this).call(this, event);
@@ -418,8 +419,8 @@
         key: "onClose",
         value: function onClose(closeEvent) {
           if (closeEvent.code !== 1000 || closeEvent.wasClean === false) {
-            this.reconnect();
-            return;
+//            this.reconnect();
+//            return;
           }
           _get(_getPrototypeOf(WebsocketProvider.prototype), "onClose", this).call(this);
         }
